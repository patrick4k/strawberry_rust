Beginning tokenizing stream: 
----------------------------------------------------------------------------

let a = r"my new string";

----------------------------------------------------------------------------


Ignored: 2 chars to newline = '^[\n|\r]+'
Substream ------------------------------------------------------------------
let a = r"my new string";

----------------------------------------------------------------------------


Matched: 'let' to identifier = '^(?:[a-zA-Z])((?:[a-zA-Z])|(?:\d)|_)*'
Substream ------------------------------------------------------------------
 a = r"my new string";

----------------------------------------------------------------------------


Ignored: 1 chars to whitespace = '^\s+'
Substream ------------------------------------------------------------------
a = r"my new string";

----------------------------------------------------------------------------


Matched: 'a' to identifier = '^(?:[a-zA-Z])((?:[a-zA-Z])|(?:\d)|_)*'
Substream ------------------------------------------------------------------
 = r"my new string";

----------------------------------------------------------------------------


Ignored: 1 chars to whitespace = '^\s+'
Substream ------------------------------------------------------------------
= r"my new string";

----------------------------------------------------------------------------


Matched: '='
Substream ------------------------------------------------------------------
 r"my new string";

----------------------------------------------------------------------------


Ignored: 1 chars to whitespace = '^\s+'
Substream ------------------------------------------------------------------
r"my new string";

----------------------------------------------------------------------------


Matched: 'my new string' to regex = '^r(?:"(.*)")'
Substream ------------------------------------------------------------------
;

----------------------------------------------------------------------------


Matched: ';'
Substream ------------------------------------------------------------------


----------------------------------------------------------------------------


Ignored: 2 chars to newline = '^[\n|\r]+'
Reached end of stream

Lexer finished successfully,
Printing tokens:

>> let
>> a
>> =
>> my new string
>> ;
